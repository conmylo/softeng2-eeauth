{"result":[{"scriptId":"12","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":9060,"endOffset":9133,"count":2}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":9139,"endOffset":9190,"count":5}],"isBlockCoverage":false},{"functionName":"desc.value","ranges":[{"startOffset":10853,"endOffset":10922,"count":2}],"isBlockCoverage":true}]},{"scriptId":"16","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3744,"endOffset":3808,"count":2}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14869,"endOffset":14941,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":15330,"endOffset":15626,"count":2},{"startOffset":15590,"endOffset":15625,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16473,"endOffset":16538,"count":10}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16542,"endOffset":16603,"count":2}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16607,"endOffset":16664,"count":2}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16731,"endOffset":16794,"count":2}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":17306,"endOffset":17487,"count":2},{"startOffset":17458,"endOffset":17484,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":17493,"endOffset":17618,"count":2},{"startOffset":17559,"endOffset":17584,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17980,"endOffset":18560,"count":2},{"startOffset":18204,"endOffset":18254,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18629,"endOffset":19255,"count":2},{"startOffset":18747,"endOffset":18760,"count":0},{"startOffset":18841,"endOffset":18950,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util","functions":[{"functionName":"normalizeEncoding","ranges":[{"startOffset":4647,"endOffset":4781,"count":1},{"startOffset":4718,"endOffset":4736,"count":0},{"startOffset":4752,"endOffset":4780,"count":0}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":994,"endOffset":1058,"count":1}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1699,"endOffset":2021,"count":1},{"startOffset":1794,"endOffset":1967,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2280,"endOffset":2668,"count":2},{"startOffset":2402,"endOffset":2456,"count":0},{"startOffset":2498,"endOffset":2552,"count":0},{"startOffset":2597,"endOffset":2663,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2925,"endOffset":3399,"count":2},{"startOffset":3099,"endOffset":3169,"count":0},{"startOffset":3204,"endOffset":3274,"count":0},{"startOffset":3312,"endOffset":3394,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3648,"endOffset":4093,"count":1},{"startOffset":3719,"endOffset":3785,"count":0},{"startOffset":3818,"endOffset":3884,"count":0},{"startOffset":3909,"endOffset":3912,"count":0},{"startOffset":4012,"endOffset":4090,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4256,"endOffset":4391,"count":5}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4604,"endOffset":5083,"count":1},{"startOffset":4704,"endOffset":4758,"count":0},{"startOffset":4781,"endOffset":4795,"count":0},{"startOffset":4813,"endOffset":4827,"count":0},{"startOffset":4869,"endOffset":4890,"count":0},{"startOffset":4893,"endOffset":5080,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9773,"endOffset":10009,"count":1},{"startOffset":9839,"endOffset":10006,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11692,"endOffset":11811,"count":2}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":248,"endOffset":356,"count":1}],"isBlockCoverage":true}]},{"scriptId":"29","url":"node:events","functions":[{"functionName":"emit","ranges":[{"startOffset":13773,"endOffset":16154,"count":2}],"isBlockCoverage":false}]},{"scriptId":"30","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4170,"endOffset":4334,"count":1}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4353,"endOffset":4481,"count":16}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8923,"endOffset":9919,"count":15}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10752,"endOffset":10912,"count":1},{"startOffset":10840,"endOffset":10909,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11458,"endOffset":11536,"count":1}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":12188,"endOffset":12533,"count":1},{"startOffset":12232,"endOffset":12268,"count":0},{"startOffset":12358,"endOffset":12371,"count":0},{"startOffset":12494,"endOffset":12532,"count":0}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12537,"endOffset":13100,"count":15}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":13104,"endOffset":13572,"count":15}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15519,"endOffset":15673,"count":1}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":17352,"endOffset":17416,"count":15}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17430,"endOffset":17476,"count":1}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20821,"endOffset":22693,"count":16},{"startOffset":20975,"endOffset":21216,"count":0},{"startOffset":21222,"endOffset":21649,"count":0},{"startOffset":21655,"endOffset":21813,"count":0},{"startOffset":21819,"endOffset":21979,"count":0},{"startOffset":21985,"endOffset":22374,"count":0},{"startOffset":22380,"endOffset":22515,"count":0},{"startOffset":22521,"endOffset":22685,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":24151,"endOffset":24760,"count":1},{"startOffset":24224,"endOffset":24274,"count":0},{"startOffset":24331,"endOffset":24341,"count":0},{"startOffset":24373,"endOffset":24383,"count":0},{"startOffset":24436,"endOffset":24448,"count":0},{"startOffset":24465,"endOffset":24488,"count":0},{"startOffset":24517,"endOffset":24527,"count":0},{"startOffset":24566,"endOffset":24600,"count":0},{"startOffset":24675,"endOffset":24716,"count":0}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":27322,"endOffset":27424,"count":17}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":30811,"endOffset":31064,"count":1}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":31349,"endOffset":31492,"count":1}],"isBlockCoverage":false}]},{"scriptId":"39","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1106,"endOffset":1194,"count":2},{"startOffset":1183,"endOffset":1186,"count":1},{"startOffset":1187,"endOffset":1190,"count":1}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1508,"endOffset":2519,"count":0},{"startOffset":1566,"endOffset":2396,"count":1},{"startOffset":1613,"endOffset":2369,"count":2},{"startOffset":1820,"endOffset":1855,"count":0},{"startOffset":1992,"endOffset":2034,"count":0},{"startOffset":2048,"endOffset":2099,"count":0},{"startOffset":2113,"endOffset":2173,"count":0},{"startOffset":2187,"endOffset":2214,"count":0},{"startOffset":2303,"endOffset":2324,"count":0},{"startOffset":2396,"endOffset":2450,"count":1}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2667,"endOffset":3571,"count":2},{"startOffset":2772,"endOffset":2779,"count":0},{"startOffset":2831,"endOffset":2845,"count":0},{"startOffset":2894,"endOffset":2945,"count":0},{"startOffset":2951,"endOffset":3016,"count":0},{"startOffset":3022,"endOffset":3169,"count":0},{"startOffset":3201,"endOffset":3227,"count":1},{"startOffset":3481,"endOffset":3541,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2190,"endOffset":2282,"count":1},{"startOffset":2271,"endOffset":2274,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6847,"endOffset":10099,"count":1},{"startOffset":7008,"endOffset":7192,"count":0},{"startOffset":7260,"endOffset":10000,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3143,"endOffset":3197,"count":7}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3203,"endOffset":3272,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3278,"endOffset":3368,"count":2}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3374,"endOffset":3596,"count":3},{"startOffset":3470,"endOffset":3482,"count":1},{"startOffset":3482,"endOffset":3595,"count":2}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3724,"endOffset":3773,"count":4}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3779,"endOffset":4050,"count":2},{"startOffset":3821,"endOffset":4018,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":4056,"endOffset":4320,"count":3},{"startOffset":4151,"endOffset":4172,"count":2},{"startOffset":4174,"endOffset":4297,"count":0}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/streams/duplex","functions":[{"functionName":"get","ranges":[{"startOffset":3913,"endOffset":4131,"count":1},{"startOffset":4013,"endOffset":4046,"count":0},{"startOffset":4091,"endOffset":4123,"count":0}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/streams/writable","functions":[{"functionName":"nop","ranges":[{"startOffset":2459,"endOffset":2476,"count":16}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":7176,"endOffset":7313,"count":1}],"isBlockCoverage":true},{"functionName":"_write","ranges":[{"startOffset":9672,"endOffset":11064,"count":30},{"startOffset":9800,"endOffset":9865,"count":0},{"startOffset":9933,"endOffset":10051,"count":0},{"startOffset":10134,"endOffset":10181,"count":0},{"startOffset":10248,"endOffset":10697,"count":15},{"startOffset":10457,"endOffset":10697,"count":0},{"startOffset":10738,"endOffset":10789,"count":0},{"startOffset":10816,"endOffset":10868,"count":0},{"startOffset":10883,"endOffset":10978,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.write","ranges":[{"startOffset":11095,"endOffset":11183,"count":30}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":11214,"endOffset":11262,"count":1}],"isBlockCoverage":true},{"functionName":"Writable.uncork","ranges":[{"startOffset":11295,"endOffset":11459,"count":1}],"isBlockCoverage":true},{"functionName":"writeOrBuffer","ranges":[{"startOffset":12032,"endOffset":13076,"count":30},{"startOffset":12131,"endOffset":12134,"count":0},{"startOffset":12361,"endOffset":12384,"count":0},{"startOffset":12424,"endOffset":12440,"count":15},{"startOffset":12441,"endOffset":12462,"count":15},{"startOffset":12464,"endOffset":12704,"count":15},{"startOffset":12575,"endOffset":12616,"count":0},{"startOffset":12661,"endOffset":12699,"count":0},{"startOffset":12704,"endOffset":12902,"count":15}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":13080,"endOffset":13470,"count":1},{"startOffset":13272,"endOffset":13321,"count":0},{"startOffset":13384,"endOffset":13444,"count":0}],"isBlockCoverage":true},{"functionName":"onwrite","ranges":[{"startOffset":13874,"endOffset":15568,"count":16},{"startOffset":14037,"endOffset":14114,"count":0},{"startOffset":14239,"endOffset":14814,"count":0},{"startOffset":14876,"endOffset":14919,"count":1},{"startOffset":15241,"endOffset":15289,"count":14},{"startOffset":15291,"endOffset":15344,"count":14},{"startOffset":15344,"endOffset":15498,"count":2},{"startOffset":15505,"endOffset":15560,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":15572,"endOffset":15714,"count":2}],"isBlockCoverage":true},{"functionName":"afterWrite","ranges":[{"startOffset":15718,"endOffset":16111,"count":2},{"startOffset":15887,"endOffset":15950,"count":0},{"startOffset":15976,"endOffset":16017,"count":16},{"startOffset":16044,"endOffset":16075,"count":0}],"isBlockCoverage":true},{"functionName":"clearBuffer","ranges":[{"startOffset":16830,"endOffset":18377,"count":2},{"startOffset":16921,"endOffset":16946,"count":1},{"startOffset":16947,"endOffset":16975,"count":1},{"startOffset":16977,"endOffset":17142,"count":1},{"startOffset":17142,"endOffset":17161,"count":0},{"startOffset":17161,"endOffset":17269,"count":1},{"startOffset":17271,"endOffset":17851,"count":1},{"startOffset":17361,"endOffset":17476,"count":0},{"startOffset":17668,"endOffset":17702,"count":0},{"startOffset":17851,"endOffset":18339,"count":0},{"startOffset":18339,"endOffset":18376,"count":1}],"isBlockCoverage":true},{"functionName":"callback","ranges":[{"startOffset":17363,"endOffset":17476,"count":0}],"isBlockCoverage":false},{"functionName":"needFinish","ranges":[{"startOffset":20047,"endOffset":20398,"count":2},{"startOffset":20100,"endOffset":20130,"count":0},{"startOffset":20131,"endOffset":20162,"count":0},{"startOffset":20163,"endOffset":20195,"count":0},{"startOffset":20196,"endOffset":20224,"count":0},{"startOffset":20225,"endOffset":20266,"count":0},{"startOffset":20267,"endOffset":20296,"count":0},{"startOffset":20297,"endOffset":20325,"count":0},{"startOffset":20326,"endOffset":20359,"count":0},{"startOffset":20360,"endOffset":20393,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":21709,"endOffset":22227,"count":2},{"startOffset":21779,"endOffset":22224,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21919,"endOffset":22087,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":23211,"endOffset":23300,"count":1},{"startOffset":23285,"endOffset":23292,"count":0}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:path","functions":[{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1963,"endOffset":2136,"count":4},{"startOffset":2065,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2202,"endOffset":4212,"count":3},{"startOffset":2425,"endOffset":4194,"count":171},{"startOffset":2460,"endOffset":2502,"count":168},{"startOffset":2502,"endOffset":2597,"count":3},{"startOffset":2553,"endOffset":2597,"count":0},{"startOffset":2597,"endOffset":2632,"count":168},{"startOffset":2632,"endOffset":4090,"count":19},{"startOffset":2680,"endOffset":2707,"count":0},{"startOffset":2729,"endOffset":3793,"count":0},{"startOffset":3841,"endOffset":3910,"count":16},{"startOffset":3910,"endOffset":3987,"count":3},{"startOffset":4090,"endOffset":4189,"count":149},{"startOffset":4118,"endOffset":4132,"count":4},{"startOffset":4134,"endOffset":4157,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4868,"endOffset":9786,"count":3},{"startOffset":5200,"endOffset":5233,"count":0},{"startOffset":5242,"endOffset":6207,"count":0},{"startOffset":6431,"endOffset":6596,"count":0},{"startOffset":6629,"endOffset":8151,"count":0},{"startOffset":8691,"endOffset":8914,"count":0},{"startOffset":9009,"endOffset":9077,"count":0},{"startOffset":9730,"endOffset":9780,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":16115,"endOffset":19998,"count":1},{"startOffset":16233,"endOffset":16243,"count":0},{"startOffset":16367,"endOffset":16377,"count":0},{"startOffset":16507,"endOffset":16517,"count":0},{"startOffset":16700,"endOffset":16728,"count":0},{"startOffset":16956,"endOffset":16982,"count":0},{"startOffset":17197,"endOffset":17223,"count":0},{"startOffset":17430,"endOffset":17454,"count":0},{"startOffset":17603,"endOffset":17610,"count":0},{"startOffset":17686,"endOffset":17928,"count":40},{"startOffset":17837,"endOffset":17843,"count":0},{"startOffset":17903,"endOffset":17921,"count":5},{"startOffset":18068,"endOffset":18133,"count":0},{"startOffset":18481,"endOffset":18686,"count":0},{"startOffset":18695,"endOffset":19240,"count":0},{"startOffset":19247,"endOffset":19997,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":20070,"endOffset":21201,"count":1},{"startOffset":20210,"endOffset":20222,"count":0},{"startOffset":20316,"endOffset":20328,"count":0},{"startOffset":20408,"endOffset":20827,"count":0},{"startOffset":21176,"endOffset":21200,"count":0}],"isBlockCoverage":true}]},{"scriptId":"75","url":"node:fs","functions":[{"functionName":"isFileType","ranges":[{"startOffset":5609,"endOffset":5876,"count":1},{"startOffset":5813,"endOffset":5833,"count":0}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":11332,"endOffset":11570,"count":1},{"startOffset":11478,"endOffset":11490,"count":0},{"startOffset":11492,"endOffset":11550,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":11574,"endOffset":11898,"count":1},{"startOffset":11696,"endOffset":11750,"count":0},{"startOffset":11841,"endOffset":11853,"count":0},{"startOffset":11855,"endOffset":11872,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11902,"endOffset":12167,"count":1},{"startOffset":12107,"endOffset":12119,"count":0},{"startOffset":12121,"endOffset":12138,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":12402,"endOffset":13849,"count":1},{"startOffset":12574,"endOffset":12580,"count":0},{"startOffset":12723,"endOffset":12726,"count":0},{"startOffset":12861,"endOffset":12886,"count":0},{"startOffset":13149,"endOffset":13529,"count":0},{"startOffset":13594,"endOffset":13693,"count":0},{"startOffset":13715,"endOffset":13757,"count":0}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":14421,"endOffset":14567,"count":1}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":15603,"endOffset":16010,"count":1}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":18782,"endOffset":19828,"count":1},{"startOffset":18929,"endOffset":19144,"count":0},{"startOffset":19170,"endOffset":19193,"count":0},{"startOffset":19290,"endOffset":19311,"count":0},{"startOffset":19346,"endOffset":19479,"count":0}],"isBlockCoverage":true}]},{"scriptId":"76","url":"node:internal/url","functions":[{"functionName":"URLSearchParams","ranges":[{"startOffset":4549,"endOffset":7487,"count":2},{"startOffset":4667,"endOffset":7421,"count":0}],"isBlockCoverage":true},{"functionName":"onParseComplete","ranges":[{"startOffset":15264,"endOffset":15974,"count":2},{"startOffset":15524,"endOffset":15534,"count":0},{"startOffset":15598,"endOffset":15608,"count":0},{"startOffset":15691,"endOffset":15695,"count":0}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":18272,"endOffset":18687,"count":2},{"startOffset":18423,"endOffset":18477,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20137,"endOffset":21441,"count":3},{"startOffset":20183,"endOffset":20218,"count":0},{"startOffset":20669,"endOffset":20824,"count":0},{"startOffset":20855,"endOffset":20891,"count":0},{"startOffset":20943,"endOffset":20965,"count":0},{"startOffset":21002,"endOffset":21037,"count":0},{"startOffset":21074,"endOffset":21096,"count":0},{"startOffset":21097,"endOffset":21118,"count":0},{"startOffset":21120,"endOffset":21152,"count":0},{"startOffset":21310,"endOffset":21333,"count":0},{"startOffset":21393,"endOffset":21419,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":21501,"endOffset":21616,"count":1},{"startOffset":21548,"endOffset":21582,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":21622,"endOffset":21737,"count":2},{"startOffset":21669,"endOffset":21703,"count":0}],"isBlockCoverage":true},{"functionName":"get origin","ranges":[{"startOffset":22078,"endOffset":22737,"count":2},{"startOffset":22127,"endOffset":22161,"count":0},{"startOffset":22290,"endOffset":22526,"count":0},{"startOffset":22534,"endOffset":22546,"count":0},{"startOffset":22554,"endOffset":22567,"count":0},{"startOffset":22575,"endOffset":22589,"count":0},{"startOffset":22597,"endOffset":22608,"count":0},{"startOffset":22616,"endOffset":22698,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":22743,"endOffset":22867,"count":2},{"startOffset":22794,"endOffset":22828,"count":0}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":25047,"endOffset":25175,"count":2},{"startOffset":25098,"endOffset":25132,"count":0}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":26147,"endOffset":26428,"count":2},{"startOffset":26198,"endOffset":26232,"count":0},{"startOffset":26301,"endOffset":26320,"count":0},{"startOffset":26360,"endOffset":26370,"count":0}],"isBlockCoverage":true},{"functionName":"initSearchParams","ranges":[{"startOffset":30598,"endOffset":30744,"count":2},{"startOffset":30699,"endOffset":30743,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":40289,"endOffset":41720,"count":2},{"startOffset":40436,"endOffset":40798,"count":136},{"startOffset":40468,"endOffset":40793,"count":0},{"startOffset":40929,"endOffset":41375,"count":0},{"startOffset":41620,"endOffset":41688,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":42248,"endOffset":42603,"count":2},{"startOffset":42317,"endOffset":42442,"count":1},{"startOffset":42378,"endOffset":42442,"count":0},{"startOffset":42482,"endOffset":42523,"count":0},{"startOffset":42572,"endOffset":42599,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":45405,"endOffset":45526,"count":2}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":45530,"endOffset":45679,"count":1},{"startOffset":45615,"endOffset":45636,"count":0}],"isBlockCoverage":true}]},{"scriptId":"79","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3712,"endOffset":3917,"count":1},{"startOffset":3797,"endOffset":3914,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7570,"endOffset":8215,"count":1},{"startOffset":7689,"endOffset":7723,"count":0},{"startOffset":7884,"endOffset":8008,"count":0},{"startOffset":8127,"endOffset":8193,"count":0}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":8278,"endOffset":8820,"count":3},{"startOffset":8349,"endOffset":8488,"count":0},{"startOffset":8521,"endOffset":8817,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8965,"endOffset":9574,"count":1},{"startOffset":9200,"endOffset":9220,"count":0},{"startOffset":9291,"endOffset":9360,"count":0},{"startOffset":9381,"endOffset":9573,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15747,"endOffset":17043,"count":1},{"startOffset":15829,"endOffset":15887,"count":0},{"startOffset":15912,"endOffset":15940,"count":0},{"startOffset":16001,"endOffset":16012,"count":0},{"startOffset":16035,"endOffset":16072,"count":0},{"startOffset":16078,"endOffset":16104,"count":0},{"startOffset":16110,"endOffset":16122,"count":0},{"startOffset":16145,"endOffset":16181,"count":0},{"startOffset":16189,"endOffset":16236,"count":0},{"startOffset":16242,"endOffset":16253,"count":0},{"startOffset":16276,"endOffset":16333,"count":0},{"startOffset":16341,"endOffset":16387,"count":0},{"startOffset":16393,"endOffset":16404,"count":0},{"startOffset":16427,"endOffset":16482,"count":0},{"startOffset":16490,"endOffset":16538,"count":0},{"startOffset":16544,"endOffset":16555,"count":0},{"startOffset":16578,"endOffset":16636,"count":0},{"startOffset":16642,"endOffset":16653,"count":0},{"startOffset":16676,"endOffset":16734,"count":0},{"startOffset":16742,"endOffset":16789,"count":0},{"startOffset":16795,"endOffset":16806,"count":0},{"startOffset":16829,"endOffset":16885,"count":0},{"startOffset":16891,"endOffset":16902,"count":0},{"startOffset":16925,"endOffset":16981,"count":0},{"startOffset":16986,"endOffset":17042,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18061,"endOffset":18451,"count":1},{"startOffset":18118,"endOffset":18187,"count":0},{"startOffset":18209,"endOffset":18278,"count":0},{"startOffset":18320,"endOffset":18446,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18976,"endOffset":19256,"count":1},{"startOffset":19039,"endOffset":19061,"count":0},{"startOffset":19063,"endOffset":19151,"count":0},{"startOffset":19231,"endOffset":19253,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19303,"endOffset":19442,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19487,"endOffset":19616,"count":2},{"startOffset":19539,"endOffset":19560,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25333,"endOffset":25815,"count":1},{"startOffset":25436,"endOffset":25812,"count":0}],"isBlockCoverage":true}]},{"scriptId":"86","url":"node:internal/stream_base_commons","functions":[{"functionName":"createWriteWrap","ranges":[{"startOffset":2803,"endOffset":3052,"count":1}],"isBlockCoverage":true},{"functionName":"writevGeneric","ranges":[{"startOffset":3056,"endOffset":3718,"count":1},{"startOffset":3293,"endOffset":3317,"count":15},{"startOffset":3322,"endOffset":3538,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3937,"endOffset":4250,"count":1},{"startOffset":4109,"endOffset":4160,"count":0}],"isBlockCoverage":true}]},{"scriptId":"442","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":9197,"endOffset":9457,"count":1},{"startOffset":9321,"endOffset":9344,"count":3},{"startOffset":9410,"endOffset":9439,"count":0}],"isBlockCoverage":true},{"functionName":"appendCJSCache","ranges":[{"startOffset":9461,"endOffset":9758,"count":1},{"startOffset":9534,"endOffset":9755,"count":0}],"isBlockCoverage":true}]},{"scriptId":"443","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":1447,"endOffset":1888,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1542,"endOffset":1801,"count":1},{"startOffset":1627,"endOffset":1800,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1826,"endOffset":1861,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"node:net","functions":[{"functionName":"_unrefTimer","ranges":[{"startOffset":13998,"endOffset":14133,"count":1},{"startOffset":14103,"endOffset":14125,"count":0}],"isBlockCoverage":true},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":24443,"endOffset":25389,"count":1},{"startOffset":24669,"endOffset":25025,"count":0},{"startOffset":25110,"endOffset":25169,"count":0},{"startOffset":25265,"endOffset":25324,"count":0},{"startOffset":25348,"endOffset":25386,"count":0}],"isBlockCoverage":true},{"functionName":"connect","ranges":[{"startOffset":24767,"endOffset":24884,"count":0}],"isBlockCoverage":false},{"functionName":"onClose","ranges":[{"startOffset":24892,"endOffset":24973,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":25423,"endOffset":25493,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":61885,"endOffset":61916,"count":1}],"isBlockCoverage":true}]},{"scriptId":"477","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/cli.js","functions":[{"functionName":"loadCli","ranges":[{"startOffset":2552,"endOffset":15159,"count":0},{"startOffset":14923,"endOffset":14956,"count":1},{"startOffset":15054,"endOffset":15157,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13693,"endOffset":14031,"count":0},{"startOffset":13895,"endOffset":13930,"count":1}],"isBlockCoverage":true}]},{"scriptId":"488","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/api.js","functions":[{"functionName":"","ranges":[{"startOffset":6233,"endOffset":6819,"count":1},{"startOffset":6269,"endOffset":6313,"count":0},{"startOffset":6315,"endOffset":6461,"count":0},{"startOffset":6480,"endOffset":6582,"count":0},{"startOffset":6584,"endOffset":6814,"count":0}],"isBlockCoverage":true}]},{"scriptId":"515","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/emittery/index.js","functions":[{"functionName":"emit","ranges":[{"startOffset":8504,"endOffset":9384,"count":0},{"startOffset":9381,"endOffset":9383,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9131,"endOffset":9229,"count":1}],"isBlockCoverage":true}]},{"scriptId":"527","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/run-status.js","functions":[{"functionName":"suggestExitCode","ranges":[{"startOffset":4619,"endOffset":5312,"count":1},{"startOffset":4681,"endOffset":4699,"count":0},{"startOffset":4730,"endOffset":4763,"count":0},{"startOffset":4765,"endOffset":4783,"count":0},{"startOffset":4931,"endOffset":4962,"count":0},{"startOffset":4966,"endOffset":4998,"count":0},{"startOffset":5002,"endOffset":5038,"count":0},{"startOffset":5042,"endOffset":5068,"count":0},{"startOffset":5072,"endOffset":5108,"count":0},{"startOffset":5112,"endOffset":5149,"count":0},{"startOffset":5172,"endOffset":5311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5217,"endOffset":5275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/chalk/source/index.js","functions":[{"functionName":"get","ranges":[{"startOffset":1499,"endOffset":1699,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3245,"endOffset":3289,"count":10}],"isBlockCoverage":true},{"functionName":"createStyler","ranges":[{"startOffset":3375,"endOffset":3650,"count":4},{"startOffset":3458,"endOffset":3500,"count":3},{"startOffset":3500,"endOffset":3583,"count":1}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3675,"endOffset":4243,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3848,"endOffset":3959,"count":9},{"startOffset":3936,"endOffset":3958,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4265,"endOffset":5300,"count":9},{"startOffset":4318,"endOffset":4361,"count":0},{"startOffset":4419,"endOffset":4440,"count":0},{"startOffset":4511,"endOffset":4840,"count":0},{"startOffset":5177,"endOffset":5260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"584","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/strip-ansi/index.js","functions":[{"functionName":"stripAnsi","ranges":[{"startOffset":80,"endOffset":467,"count":3},{"startOffset":142,"endOffset":220,"count":0}],"isBlockCoverage":true}]},{"scriptId":"587","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/indent-string/index.js","functions":[{"functionName":"indentString","ranges":[{"startOffset":15,"endOffset":819,"count":8},{"startOffset":173,"endOffset":274,"count":0},{"startOffset":308,"endOffset":408,"count":0},{"startOffset":426,"endOffset":518,"count":0},{"startOffset":553,"endOffset":663,"count":0},{"startOffset":683,"endOffset":704,"count":0},{"startOffset":739,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"832","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/stack-utils/index.js","functions":[{"functionName":"clean","ranges":[{"startOffset":1103,"endOffset":2199,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1441,"endOffset":2130,"count":3},{"startOffset":1548,"endOffset":1573,"count":2},{"startOffset":1573,"endOffset":1638,"count":1},{"startOffset":1638,"endOffset":1701,"count":0},{"startOffset":1701,"endOffset":2124,"count":1},{"startOffset":1918,"endOffset":2005,"count":0},{"startOffset":2043,"endOffset":2116,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1516,"endOffset":1545,"count":148}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2156,"endOffset":2184,"count":1}],"isBlockCoverage":true}]},{"scriptId":"940","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/reporters/default.js","functions":[{"functionName":"_write","ranges":[{"startOffset":865,"endOffset":936,"count":15}],"isBlockCoverage":true},{"functionName":"writeLine","ranges":[{"startOffset":939,"endOffset":1129,"count":15},{"startOffset":973,"endOffset":1060,"count":8},{"startOffset":1060,"endOffset":1126,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1290,"endOffset":1422,"count":1}],"isBlockCoverage":true},{"functionName":"Reporter.relativeFile","ranges":[{"startOffset":1727,"endOffset":1858,"count":1}],"isBlockCoverage":true},{"functionName":"prefixTitle","ranges":[{"startOffset":2274,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"writeSerializedError","ranges":[{"startOffset":12245,"endOffset":14928,"count":1},{"startOffset":12343,"endOffset":12444,"count":0},{"startOffset":12478,"endOffset":12578,"count":0},{"startOffset":12610,"endOffset":12637,"count":0},{"startOffset":12638,"endOffset":12675,"count":0},{"startOffset":12677,"endOffset":12810,"count":0},{"startOffset":13296,"endOffset":14139,"count":0},{"startOffset":14329,"endOffset":14408,"count":0},{"startOffset":14607,"endOffset":14691,"count":0}],"isBlockCoverage":true},{"functionName":"formatErrorStack","ranges":[{"startOffset":14931,"endOffset":15333,"count":1},{"startOffset":14988,"endOffset":15007,"count":0},{"startOffset":15292,"endOffset":15332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15063,"endOffset":15286,"count":1},{"startOffset":15134,"endOffset":15215,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15100,"endOffset":15131,"count":71}],"isBlockCoverage":true},{"functionName":"writeFailure","ranges":[{"startOffset":17023,"endOffset":17263,"count":1}],"isBlockCoverage":true},{"functionName":"endRun","ranges":[{"startOffset":17266,"endOffset":22925,"count":1},{"startOffset":17349,"endOffset":17435,"count":0},{"startOffset":17472,"endOffset":17590,"count":0},{"startOffset":17659,"endOffset":18251,"count":0},{"startOffset":18304,"endOffset":18972,"count":0},{"startOffset":18994,"endOffset":19027,"count":0},{"startOffset":19029,"endOffset":19193,"count":0},{"startOffset":19462,"endOffset":19537,"count":0},{"startOffset":19664,"endOffset":19747,"count":0},{"startOffset":19749,"endOffset":20521,"count":0},{"startOffset":20554,"endOffset":20876,"count":0},{"startOffset":20912,"endOffset":21082,"count":0},{"startOffset":21367,"endOffset":21396,"count":0},{"startOffset":21401,"endOffset":21575,"count":0},{"startOffset":21623,"endOffset":21774,"count":0},{"startOffset":21811,"endOffset":21938,"count":0},{"startOffset":21972,"endOffset":22090,"count":0},{"startOffset":22134,"endOffset":22283,"count":0},{"startOffset":22326,"endOffset":22472,"count":0},{"startOffset":22510,"endOffset":22665,"count":0},{"startOffset":22700,"endOffset":22862,"count":0},{"startOffset":22885,"endOffset":22922,"count":0}],"isBlockCoverage":true}]},{"scriptId":"941","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/plur/index.js","functions":[{"functionName":"plur","ranges":[{"startOffset":66,"endOffset":962,"count":1},{"startOffset":207,"endOffset":587,"count":0},{"startOffset":951,"endOffset":959,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":743,"endOffset":907,"count":1},{"startOffset":880,"endOffset":901,"count":0}],"isBlockCoverage":true}]},{"scriptId":"942","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/code-excerpt.js","functions":[{"functionName":"formatLineNumber","ranges":[{"startOffset":165,"endOffset":291,"count":3}],"isBlockCoverage":true},{"functionName":"excerptCode","ranges":[{"startOffset":309,"endOffset":1298,"count":1},{"startOffset":407,"endOffset":426,"count":0},{"startOffset":494,"endOffset":498,"count":0},{"startOffset":500,"endOffset":505,"count":0},{"startOffset":586,"endOffset":611,"count":0},{"startOffset":687,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":735,"endOffset":835,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":884,"endOffset":909,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":935,"endOffset":1280,"count":3},{"startOffset":1097,"endOffset":1109,"count":1},{"startOffset":1110,"endOffset":1134,"count":2},{"startOffset":1240,"endOffset":1266,"count":1},{"startOffset":1267,"endOffset":1275,"count":2}],"isBlockCoverage":true}]},{"scriptId":"944","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/reporters/beautify-stack.js","functions":[{"functionName":"beautifyStack","ranges":[{"startOffset":1829,"endOffset":2011,"count":1},{"startOffset":1874,"endOffset":1891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1976,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1988,"endOffset":2007,"count":1}],"isBlockCoverage":true}]},{"scriptId":"945","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/reporters/colors.js","functions":[{"functionName":"get log","ranges":[{"startOffset":54,"endOffset":89,"count":2}],"isBlockCoverage":true},{"functionName":"get title","ranges":[{"startOffset":92,"endOffset":129,"count":1}],"isBlockCoverage":true},{"functionName":"get error","ranges":[{"startOffset":132,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"get errorSource","ranges":[{"startOffset":338,"endOffset":381,"count":1}],"isBlockCoverage":true},{"functionName":"get errorStack","ranges":[{"startOffset":384,"endOffset":426,"count":1}],"isBlockCoverage":true}]},{"scriptId":"946","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/reporters/format-serialized-error.js","functions":[{"functionName":"formatSerializedError","ranges":[{"startOffset":15,"endOffset":464,"count":1},{"startOffset":129,"endOffset":147,"count":0},{"startOffset":237,"endOffset":283,"count":0}],"isBlockCoverage":true}]},{"scriptId":"948","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/ava/lib/reporters/improper-usage-messages.js","functions":[{"functionName":"buildMessage","ranges":[{"startOffset":81,"endOffset":1648,"count":1},{"startOffset":160,"endOffset":254,"count":0},{"startOffset":256,"endOffset":1647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"949","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/cli-truncate/index.js","functions":[{"functionName":"cliTruncate","ranges":[{"startOffset":480,"endOffset":2653,"count":3},{"startOffset":704,"endOffset":788,"count":0},{"startOffset":824,"endOffset":913,"count":0},{"startOffset":933,"endOffset":950,"count":0},{"startOffset":972,"endOffset":1006,"count":0},{"startOffset":1087,"endOffset":2652,"count":0}],"isBlockCoverage":true}]},{"scriptId":"950","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/code-excerpt/dist/index.js","functions":[{"functionName":"generateLineNumbers","ranges":[{"startOffset":74,"endOffset":319,"count":1},{"startOffset":248,"endOffset":293,"count":3}],"isBlockCoverage":true},{"functionName":"codeExcerpt","ranges":[{"startOffset":341,"endOffset":904,"count":1},{"startOffset":423,"endOffset":486,"count":0},{"startOffset":514,"endOffset":586,"count":0},{"startOffset":671,"endOffset":694,"count":0},{"startOffset":785,"endOffset":788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":806,"endOffset":843,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":858,"endOffset":900,"count":3}],"isBlockCoverage":true}]},{"scriptId":"953","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/string-width/index.js","functions":[{"functionName":"stringWidth","ranges":[{"startOffset":143,"endOffset":985,"count":3},{"startOffset":244,"endOffset":260,"count":0},{"startOffset":436,"endOffset":452,"count":0},{"startOffset":545,"endOffset":967,"count":105},{"startOffset":671,"endOffset":691,"count":0},{"startOffset":694,"endOffset":712,"count":0},{"startOffset":773,"endOffset":795,"count":0},{"startOffset":797,"endOffset":815,"count":0},{"startOffset":853,"endOffset":886,"count":0}],"isBlockCoverage":true}]},{"scriptId":"954","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/convert-to-spaces/dist/index.js","functions":[{"functionName":"convertToSpaces","ranges":[{"startOffset":24,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84,"endOffset":120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/get-east-asian-width/index.js","functions":[{"functionName":"validate","ranges":[{"startOffset":76,"endOffset":230,"count":105},{"startOffset":146,"endOffset":228,"count":0}],"isBlockCoverage":true},{"functionName":"eastAsianWidth","ranges":[{"startOffset":345,"endOffset":573,"count":105},{"startOffset":513,"endOffset":538,"count":0},{"startOffset":543,"endOffset":559,"count":0}],"isBlockCoverage":true}]},{"scriptId":"957","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/get-east-asian-width/lookup.js","functions":[{"functionName":"isFullWidth","ranges":[{"startOffset":4638,"endOffset":4751,"count":105},{"startOffset":4702,"endOffset":4716,"count":0},{"startOffset":4734,"endOffset":4748,"count":0}],"isBlockCoverage":true},{"functionName":"isWide","ranges":[{"startOffset":4753,"endOffset":8326,"count":105},{"startOffset":4794,"endOffset":4808,"count":0},{"startOffset":4898,"endOffset":4912,"count":0},{"startOffset":5038,"endOffset":5052,"count":0},{"startOffset":5484,"endOffset":5498,"count":0},{"startOffset":5534,"endOffset":5548,"count":0},{"startOffset":5674,"endOffset":5688,"count":0},{"startOffset":5706,"endOffset":5720,"count":0},{"startOffset":5738,"endOffset":5752,"count":0},{"startOffset":5770,"endOffset":5784,"count":0},{"startOffset":5802,"endOffset":5816,"count":0},{"startOffset":5834,"endOffset":5848,"count":0},{"startOffset":5866,"endOffset":5880,"count":0},{"startOffset":5898,"endOffset":5912,"count":0},{"startOffset":5930,"endOffset":5944,"count":0},{"startOffset":5962,"endOffset":5976,"count":0},{"startOffset":5994,"endOffset":6008,"count":0},{"startOffset":6026,"endOffset":6040,"count":0},{"startOffset":6058,"endOffset":6072,"count":0},{"startOffset":6090,"endOffset":6104,"count":0},{"startOffset":6122,"endOffset":6136,"count":0},{"startOffset":6154,"endOffset":6168,"count":0},{"startOffset":6186,"endOffset":6200,"count":0},{"startOffset":6218,"endOffset":6232,"count":0},{"startOffset":6250,"endOffset":6264,"count":0},{"startOffset":6282,"endOffset":6296,"count":0},{"startOffset":6314,"endOffset":6328,"count":0},{"startOffset":6346,"endOffset":6360,"count":0},{"startOffset":6379,"endOffset":6394,"count":0},{"startOffset":6451,"endOffset":6466,"count":0},{"startOffset":6485,"endOffset":6500,"count":0},{"startOffset":6519,"endOffset":6534,"count":0},{"startOffset":6553,"endOffset":6568,"count":0},{"startOffset":6587,"endOffset":6602,"count":0},{"startOffset":6659,"endOffset":6674,"count":0},{"startOffset":6712,"endOffset":6727,"count":0},{"startOffset":6765,"endOffset":6780,"count":0},{"startOffset":6799,"endOffset":6814,"count":0},{"startOffset":6890,"endOffset":6905,"count":0},{"startOffset":6924,"endOffset":6939,"count":0},{"startOffset":6958,"endOffset":6973,"count":0},{"startOffset":6992,"endOffset":7007,"count":0},{"startOffset":7064,"endOffset":7079,"count":0},{"startOffset":7098,"endOffset":7113,"count":0},{"startOffset":7132,"endOffset":7147,"count":0},{"startOffset":7166,"endOffset":7181,"count":0},{"startOffset":7200,"endOffset":7215,"count":0},{"startOffset":7234,"endOffset":7249,"count":0},{"startOffset":7268,"endOffset":7283,"count":0},{"startOffset":7302,"endOffset":7317,"count":0},{"startOffset":7355,"endOffset":7370,"count":0},{"startOffset":7408,"endOffset":7423,"count":0},{"startOffset":7442,"endOffset":7457,"count":0},{"startOffset":7476,"endOffset":7491,"count":0},{"startOffset":7510,"endOffset":7525,"count":0},{"startOffset":7620,"endOffset":7635,"count":0},{"startOffset":7654,"endOffset":7669,"count":0},{"startOffset":7707,"endOffset":7722,"count":0},{"startOffset":7741,"endOffset":7756,"count":0},{"startOffset":7775,"endOffset":7790,"count":0},{"startOffset":7847,"endOffset":7862,"count":0},{"startOffset":7881,"endOffset":7896,"count":0},{"startOffset":7934,"endOffset":7949,"count":0},{"startOffset":7968,"endOffset":7983,"count":0},{"startOffset":8002,"endOffset":8017,"count":0},{"startOffset":8036,"endOffset":8051,"count":0},{"startOffset":8070,"endOffset":8085,"count":0},{"startOffset":8104,"endOffset":8119,"count":0},{"startOffset":8138,"endOffset":8153,"count":0},{"startOffset":8172,"endOffset":8187,"count":0},{"startOffset":8206,"endOffset":8221,"count":0},{"startOffset":8240,"endOffset":8255,"count":0},{"startOffset":8274,"endOffset":8289,"count":0},{"startOffset":8308,"endOffset":8323,"count":0}],"isBlockCoverage":true}]},{"scriptId":"959","url":"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/emoji-regex/index.js","functions":[{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":12885,"count":105}],"isBlockCoverage":true}]}],"timestamp":543787.453072,"source-map-cache":{"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/chunkd/dist/chunkd.js":{"lineLengths":[13,62,38,30,42,35,59,51,47,1,25,24,34],"data":{"version":3,"file":"chunkd.js","sourceRoot":"","sources":["file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/chunkd/src/chunkd.ts"],"names":[],"mappings":";;AAAA,SAAwB,MAAM,CAC7B,KAAU,EACV,KAAa,EACb,KAAa;IAEb,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;IACzB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;IACrC,IAAI,SAAS,GAAG,MAAM,GAAG,KAAK,CAAA;IAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,KAAK,GAAG,IAAI,CAAA;IACtD,IAAI,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAE9C,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,KAAK,CAAC,CAAA;AAC3C,CAAC;AAZD,yBAYC;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAA"},"url":null,"sourceURL":null},"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/write-file-atomic/node_modules/signal-exit/dist/cjs/index.js":{"lineLengths":[13,7,62,74,65,63,53,60,45,115,43,34,51,41,47,46,41,38,37,55,26,64,27,15,15,25,20,6,17,22,17,6,14,23,19,35,40,9,52,24,28,30,32,11,5,16,36,5,28,40,35,29,23,19,9,28,43,28,9,14,30,9,5,28,31,25,9,32,24,46,51,9,28,62,9,19,5,1,22,1,37,12,26,44,10,16,34,10,18,36,10,6,2,49,14,25,5,14,16,1,41,52,40,25,65,24,29,13,25,31,23,20,26,16,32,43,32,49,45,70,71,69,35,63,46,83,84,82,82,81,27,37,34,68,74,61,17,36,49,34,70,41,68,29,53,40,17,14,9,61,49,5,22,29,40,29,9,28,37,24,9,59,33,22,49,63,68,30,13,10,5,12,27,19,9,28,65,68,68,35,33,49,17,51,23,46,13,25,9,44,47,10,46,49,10,5,14,28,19,9,29,45,53,33,28,75,13,32,17,60,37,13,25,32,11,55,67,33,5,30,29,40,21,9,43,28,65,91,5,31,45,56,46,49,37,13,33,60,33,69,32,23,9,14,55,9,5,1,35,65,25,94,3,67,39,2,68,29,2,61,3,28,3,66,66,45,2,12,3,24,3,68,66,45,2,12,3,27,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/write-file-atomic/node_modules/signal-exit/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js'\nexport { signals }\n\n// just a loosened process type so we can do some evil things\ntype ProcessRE = NodeJS.Process & {\n  reallyExit: (code?: number | undefined | null) => any\n  emit: (ev: string, ...a: any[]) => any\n}\n\nconst processOk = (process: any): process is ProcessRE =>\n  !!process &&\n  typeof process === 'object' &&\n  typeof process.removeListener === 'function' &&\n  typeof process.emit === 'function' &&\n  typeof process.reallyExit === 'function' &&\n  typeof process.listeners === 'function' &&\n  typeof process.kill === 'function' &&\n  typeof process.pid === 'number' &&\n  typeof process.on === 'function'\n\nconst kExitEmitter = Symbol.for('signal-exit emitter')\nconst global: typeof globalThis & { [kExitEmitter]?: Emitter } = globalThis\nconst ObjectDefineProperty = Object.defineProperty.bind(Object)\n\n/**\n * A function that takes an exit code and signal as arguments\n *\n * In the case of signal exits *only*, a return value of true\n * will indicate that the signal is being handled, and we should\n * not synthetically exit with the signal we received. Regardless\n * of the handler return value, the handler is unloaded when an\n * otherwise fatal signal is received, so you get exactly 1 shot\n * at it, unless you add another onExit handler at that point.\n *\n * In the case of numeric code exits, we may already have committed\n * to exiting the process, for example via a fatal exception or\n * unhandled promise rejection, so it is impossible to stop safely.\n */\nexport type Handler = (\n  code: number | null | undefined,\n  signal: NodeJS.Signals | null\n) => true | void\ntype ExitEvent = 'afterExit' | 'exit'\ntype Emitted = { [k in ExitEvent]: boolean }\ntype Listeners = { [k in ExitEvent]: Handler[] }\n\n// teeny special purpose ee\nclass Emitter {\n  emitted: Emitted = {\n    afterExit: false,\n    exit: false,\n  }\n\n  listeners: Listeners = {\n    afterExit: [],\n    exit: [],\n  }\n\n  count: number = 0\n  id: number = Math.random()\n\n  constructor() {\n    if (global[kExitEmitter]) {\n      return global[kExitEmitter]\n    }\n    ObjectDefineProperty(global, kExitEmitter, {\n      value: this,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    })\n  }\n\n  on(ev: ExitEvent, fn: Handler) {\n    this.listeners[ev].push(fn)\n  }\n\n  removeListener(ev: ExitEvent, fn: Handler) {\n    const list = this.listeners[ev]\n    const i = list.indexOf(fn)\n    /* c8 ignore start */\n    if (i === -1) {\n      return\n    }\n    /* c8 ignore stop */\n    if (i === 0 && list.length === 1) {\n      list.length = 0\n    } else {\n      list.splice(i, 1)\n    }\n  }\n\n  emit(\n    ev: ExitEvent,\n    code: number | null | undefined,\n    signal: NodeJS.Signals | null\n  ): boolean {\n    if (this.emitted[ev]) {\n      return false\n    }\n    this.emitted[ev] = true\n    let ret: boolean = false\n    for (const fn of this.listeners[ev]) {\n      ret = fn(code, signal) === true || ret\n    }\n    if (ev === 'exit') {\n      ret = this.emit('afterExit', code, signal) || ret\n    }\n    return ret\n  }\n}\n\nabstract class SignalExitBase {\n  abstract onExit(cb: Handler, opts?: { alwaysLast?: boolean }): () => void\n  abstract load(): void\n  abstract unload(): void\n}\n\nconst signalExitWrap = <T extends SignalExitBase>(handler: T) => {\n  return {\n    onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n      return handler.onExit(cb, opts)\n    },\n    load() {\n      return handler.load()\n    },\n    unload() {\n      return handler.unload()\n    },\n  }\n}\n\nclass SignalExitFallback extends SignalExitBase {\n  onExit() {\n    return () => {}\n  }\n  load() {}\n  unload() {}\n}\n\nclass SignalExit extends SignalExitBase {\n  // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n  // so use a supported signal instead\n  /* c8 ignore start */\n  #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP'\n  /* c8 ignore stop */\n  #emitter = new Emitter()\n  #process: ProcessRE\n  #originalProcessEmit: ProcessRE['emit']\n  #originalProcessReallyExit: ProcessRE['reallyExit']\n\n  #sigListeners: { [k in NodeJS.Signals]?: () => void } = {}\n  #loaded: boolean = false\n\n  constructor(process: ProcessRE) {\n    super()\n    this.#process = process\n    // { <signal>: <listener fn>, ... }\n    this.#sigListeners = {}\n    for (const sig of signals) {\n      this.#sigListeners[sig] = () => {\n        // If there are no other listeners, an exit is coming!\n        // Simplest way: remove us and then re-send the signal.\n        // We know that this will kill the process, so we can\n        // safely emit now.\n        const listeners = this.#process.listeners(sig)\n        let { count } = this.#emitter\n        // This is a workaround for the fact that signal-exit v3 and signal\n        // exit v4 are not aware of each other, and each will attempt to let\n        // the other handle it, so neither of them do. To correct this, we\n        // detect if we're the only handler *except* for previous versions\n        // of signal-exit, and increment by the count of listeners it has\n        // created.\n        /* c8 ignore start */\n        const p = process as unknown as {\n          __signal_exit_emitter__?: { count: number }\n        }\n        if (\n          typeof p.__signal_exit_emitter__ === 'object' &&\n          typeof p.__signal_exit_emitter__.count === 'number'\n        ) {\n          count += p.__signal_exit_emitter__.count\n        }\n        /* c8 ignore stop */\n        if (listeners.length === count) {\n          this.unload()\n          const ret = this.#emitter.emit('exit', null, sig)\n          /* c8 ignore start */\n          const s = sig === 'SIGHUP' ? this.#hupSig : sig\n          if (!ret) process.kill(process.pid, s)\n          /* c8 ignore stop */\n        }\n      }\n    }\n\n    this.#originalProcessReallyExit = process.reallyExit\n    this.#originalProcessEmit = process.emit\n  }\n\n  onExit(cb: Handler, opts?: { alwaysLast?: boolean }) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return () => {}\n    }\n    /* c8 ignore stop */\n\n    if (this.#loaded === false) {\n      this.load()\n    }\n\n    const ev = opts?.alwaysLast ? 'afterExit' : 'exit'\n    this.#emitter.on(ev, cb)\n    return () => {\n      this.#emitter.removeListener(ev, cb)\n      if (\n        this.#emitter.listeners['exit'].length === 0 &&\n        this.#emitter.listeners['afterExit'].length === 0\n      ) {\n        this.unload()\n      }\n    }\n  }\n\n  load() {\n    if (this.#loaded) {\n      return\n    }\n    this.#loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    this.#emitter.count += 1\n\n    for (const sig of signals) {\n      try {\n        const fn = this.#sigListeners[sig]\n        if (fn) this.#process.on(sig, fn)\n      } catch (_) {}\n    }\n\n    this.#process.emit = (ev: string, ...a: any[]) => {\n      return this.#processEmit(ev, ...a)\n    }\n    this.#process.reallyExit = (code?: number | null | undefined) => {\n      return this.#processReallyExit(code)\n    }\n  }\n\n  unload() {\n    if (!this.#loaded) {\n      return\n    }\n    this.#loaded = false\n\n    signals.forEach(sig => {\n      const listener = this.#sigListeners[sig]\n      /* c8 ignore start */\n      if (!listener) {\n        throw new Error('Listener not defined for signal: ' + sig)\n      }\n      /* c8 ignore stop */\n      try {\n        this.#process.removeListener(sig, listener)\n        /* c8 ignore start */\n      } catch (_) {}\n      /* c8 ignore stop */\n    })\n    this.#process.emit = this.#originalProcessEmit\n    this.#process.reallyExit = this.#originalProcessReallyExit\n    this.#emitter.count -= 1\n  }\n\n  #processReallyExit(code?: number | null | undefined) {\n    /* c8 ignore start */\n    if (!processOk(this.#process)) {\n      return 0\n    }\n    this.#process.exitCode = code || 0\n    /* c8 ignore stop */\n\n    this.#emitter.emit('exit', this.#process.exitCode, null)\n    return this.#originalProcessReallyExit.call(\n      this.#process,\n      this.#process.exitCode\n    )\n  }\n\n  #processEmit(ev: string, ...args: any[]): any {\n    const og = this.#originalProcessEmit\n    if (ev === 'exit' && processOk(this.#process)) {\n      if (typeof args[0] === 'number') {\n        this.#process.exitCode = args[0]\n        /* c8 ignore start */\n      }\n      /* c8 ignore start */\n      const ret = og.call(this.#process, ev, ...args)\n      /* c8 ignore start */\n      this.#emitter.emit('exit', this.#process.exitCode, null)\n      /* c8 ignore stop */\n      return ret\n    } else {\n      return og.call(this.#process, ev, ...args)\n    }\n  }\n}\n\nconst process = globalThis.process\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const {\n  /**\n   * Called when the process is exiting, whether via signal, explicit\n   * exit, or running out of stuff to do.\n   *\n   * If the global process object is not suitable for instrumentation,\n   * then this will be a no-op.\n   *\n   * Returns a function that may be used to unload signal-exit.\n   */\n  onExit,\n\n  /**\n   * Load the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  load,\n\n  /**\n   * Unload the listeners.  Likely you never need to call this, unless\n   * doing a rather deep integration with signal-exit functionality.\n   * Mostly exposed for the benefit of testing.\n   *\n   * @internal\n   */\n  unload,\n} = signalExitWrap(\n  processOk(process) ? new SignalExit(process) : new SignalExitFallback()\n)\n"]},"url":null,"sourceURL":null},"file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/write-file-atomic/node_modules/signal-exit/dist/cjs/signals.js":{"lineLengths":[13,62,25,3,47,2,54,54,53,55,28,2,55,54,52,2,54,49,2,56,52,55,36,2,54,50,54,13,3,21,52,35,133,61,14,16,6,1,35,68,1,35],"data":{"version":3,"file":"signals.js","sourceRoot":"","sources":["file:///C:/Users/Xaris/Desktop/SoftEng2/SoftEng2/node_modules/write-file-atomic/node_modules/signal-exit/src/signals.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACU,QAAA,OAAO,GAAqB,EAAE,CAAA;AAC3C,eAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;AAE3C,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ;IACR,yDAAyD;IACzD,UAAU;IACV,YAAY;KACb,CAAA;CACF;AAED,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,EAAE;IAChC,eAAO,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;CACxD","sourcesContent":["/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals: NodeJS.Signals[] = []\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM')\n\nif (process.platform !== 'win32') {\n  signals.push(\n    'SIGALRM',\n    'SIGABRT',\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT')\n}\n"]},"url":null,"sourceURL":null}}}